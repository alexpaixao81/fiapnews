const News = require('../models/news');

const listarNoticias = async (req, res) => {
    try {
        const noticias = await News.findAll();
        res.json(noticias);
    } catch (error) {
        res.status(500).json({ error: "Erro ao buscar not√≠cias" });
    }
};

const criarNoticia = async (req, res) => {
    try {
        const { title, short_description, content } = req.body;

        // üöÄ Se n√£o houver arquivo enviado, define "default.jpg"
        const image = req.file ? req.file.filename : "default.jpg";

        const novaNoticia = await News.create({
            title,
            short_description,
            content,
            image,
            views: 0
        });

        res.json(novaNoticia);
    } catch (error) {
        console.error("‚ùå Erro ao criar not√≠cia:", error);
        res.status(500).json({ error: "Erro ao criar not√≠cia." });
    }
};



const buscarNoticia = async (req, res) => {
    const id = req.params.id;
    try {
        const noticia = await News.findByPk(id);

        if (!noticia) {
            return res.status(404).json({ error: "Not√≠cia n√£o encontrada." });
        }

        res.json(noticia); 
    } catch (error) {
        console.error("‚ùå Erro ao buscar not√≠cia:", error);
        res.status(500).json({ error: "Erro ao buscar a not√≠cia." });
    }
};

const atualizarNoticia = async (req, res) => {
    const id = req.params.id;
    try {
        const noticia = await News.findByPk(id);
        if (!noticia) {
            return res.status(404).json({ message: "Not√≠cia n√£o encontrada" });
        }

        const { title, short_description, content } = req.body;
        const image = req.file ? req.file.filename : noticia.image; 

        await noticia.update({ 
            title, 
            short_description, 
            content, 
            image
        });

        res.json(noticia);
    } catch (error) {
        console.error("‚ùå Erro ao atualizar not√≠cia:", error);
        res.status(500).json({ error: "Erro ao atualizar not√≠cia." });
    }
};


const deletarNoticia = async (req, res) => {
    const id = req.params.id;
    try {
        const noticia = await News.findByPk(id);
        if (noticia) {
            await noticia.destroy();
            res.json({ message: "Not√≠cia deletada com sucesso" });
        } else {
            res.status(404).json({ message: "Not√≠cia n√£o encontrada" });
        }
    } catch (error) {
        res.status(500).json({ error: "Erro ao deletar a not√≠cia." });
    }
};

const getHomePage = async (req, res) => {
    try {
        const news = await News.findAll({
            attributes: ['id', 'title', 'short_description', 'image', 'content', 'views'], 
            order: [['views', 'DESC']]
        });

        res.render('home', { news });
    } catch (error) {
        console.error("‚ùå Erro ao carregar a p√°gina inicial:", error);
        res.status(500).send("Erro ao carregar not√≠cias.");
    }
};

// üìå Exibir uma not√≠cia e incrementar visualiza√ß√µes
const incrementViews = async (req, res) => {
    try {
        const { id } = req.params;
        const newsItem = await News.findByPk(id);

        if (!newsItem) {
            return res.status(404).json({ error: "Not√≠cia n√£o encontrada." });
        }

        await newsItem.increment('views'); // Incrementa antes de renderizar
        await newsItem.reload(); // Recarrega os dados atualizados

        res.render('news-view', { newsItem });
    } catch (error) {
        console.error("Erro ao carregar a not√≠cia:", error);
        res.status(500).json({ error: "Erro ao carregar a not√≠cia." });
    }
};

// üìå Buscar todas as not√≠cias (para p√°gina de cadastro e API)
const getAllNews = async (req, res) => {
    try {
        const noticias = await News.findAll({
            attributes: ['id', 'title', 'short_description', 'content', 'image', 'views'],
            order: [['id', 'DESC']]
        });

        if (req.xhr || req.headers.accept.indexOf('json') > -1) {
            return res.json(noticias); 
        }

        res.render('cadastro', { noticias });
    } catch (error) {
        console.error("Erro ao buscar not√≠cias:", error);
        res.status(500).json({ error: "Erro ao buscar not√≠cias." });
    }
};

// üìå Buscar uma √∫nica not√≠cia por ID
const getNewsById = async (req, res) => {
    try {
        const { id } = req.params;
        const noticia = await News.findByPk(id);

        if (!noticia) {
            return res.status(404).json({ error: "Not√≠cia n√£o encontrada." });
        }

        res.json(noticia); // Retorna os dados em JSON
    } catch (error) {
        console.error("Erro ao buscar not√≠cia:", error);
        res.status(500).json({ error: "Erro ao buscar a not√≠cia." });
    }
};

const viewNoticia = async (req, res) => {
    try {
        const { id } = req.params;
        const newsItem = await News.findByPk(id);

        if (!newsItem) {
            return res.status(404).send("Not√≠cia n√£o encontrada.");
        }

        res.render("news-view", { newsItem });
    } catch (error) {
        console.error("‚ùå Erro ao carregar a not√≠cia:", error);
        res.status(500).send("Erro ao carregar not√≠cia.");
    }
};


// **Corre√ß√£o na exporta√ß√£o**
module.exports = {
    listarNoticias,
    criarNoticia,
    buscarNoticia,
    atualizarNoticia,
    deletarNoticia,
    getHomePage,
    incrementViews,
    getAllNews,
    getNewsById,
    viewNoticia
};

